html
  head
    title= title
    link(rel='stylesheet', href='/stylesheets/style.css')
    link(rel='stylesheet', href='/stylesheets/goals.css')
  body
    h1= title
    p Welcome #{username}!
    h2 UPDATE 9/10
    p New things! You can now add and remove time manually by clicking 'edit' for a goal. And if you missed from before, you can also now view your progress toward a goal and if you're on track or not. 
    p Known edge case: Don't be a dick and try adding or removing negative numbers. I'm not doing any input validation anywhere yet.
    p Feel free to email me any feedback at adamestela@gmail.com. 
    a(href='/createGoal') Create New Goal!
    
    ul
      <!-- Get all the info we need for each goal. -->
      <!-- Calculate and format hours. -->
      each goal in goals
        - var timerStarted = goal.timerStart != 0;
        - var loggedDayHours = Math.trunc(goal.loggedDayHours);
        - var loggedDayMinutes = Math.trunc((goal.loggedDayHours * 60) % 60);
        - var loggedWeekHours = Math.trunc(goal.loggedWeekHours);
        - var loggedWeekMinutes = Math.trunc((goal.loggedWeekHours * 60) % 60);
        - var loggedTotalHours = Math.trunc(goal.loggedTotalHours);
        - var loggedTotalMinutes = Math.trunc((goal.loggedTotalHours * 60) % 60);
        - var totalDayHours = Math.trunc(goal.totalHoursPerDay);
        - var totalDayMinutes = Math.trunc((goal.totalHoursPerDay * 60) % 60);
        - var totalWeekHours = Math.trunc(goal.totalHoursPerWeek);
        - var totalWeekMinutes = Math.trunc((goal.totalHoursPerWeek * 60) % 60);
        - var totalGoalHours = Math.trunc(goal.totalHoursToGoal);
        - var totalGoalMinutes = Math.trunc((goal.totalHoursToGoal * 60) % 60);
        
        <!-- Calculate and format progress. -->
        - var startDay = goal.startTime / 86400000;
        - var endDay = startDay + goal.durationDays;
        - var currentDay = (new Date()).getTime() / 86400000;
        - var daysElapsed = currentDay - startDay;
        - var totalPercentOfTimePassed = ((daysElapsed / goal.durationDays) * 100).toFixed(2);
        - var totalPercentHoursLogged = ((goal.loggedTotalHours / goal.totalHoursToGoal) * 100).toFixed(2);
        - var totalPercentHoursLoggedStyle = totalPercentHoursLogged + "%";
        
        - var weekPercentOfTimePassed = (((new Date()).getDay() / 6) * 100).toFixed(2);
        - var weekPercentHoursLogged = ((goal.loggedWeekHours / goal.totalHoursPerWeek) * 100).toFixed(2);
        - var weekPercentOfTimePassedStyle = Math.min(100, weekPercentOfTimePassed) + "%";
        - var weekPercentHoursLoggedStyle = Math.min((100 / weekPercentOfTimePassed) * 100, ((100 / weekPercentOfTimePassed) * weekPercentHoursLogged).toString()) + "%";
        - var remainingWeekTime = goal.totalHoursPerWeek - goal.loggedWeekHours;
        - var remainingWeekHours = Math.trunc(remainingWeekTime);
        - var remainingWeekMinutes = Math.trunc((remainingWeekTime * 60) % 60);
        - var weekOnTrackDelta = ((weekPercentOfTimePassed - weekPercentHoursLogged) / 100) * totalWeekHours;
        
        - var goalOnTrackTotal = totalPercentHoursLogged >= totalPercentOfTimePassed ? "Yes!" : "No.";
        - var goalOnTrackWeek = weekPercentHoursLogged >= weekPercentOfTimePassed ? "Yes!" : "No.";
        
        - var isPracticeGoal = goal.totalHoursToGoal < 0;
        
        li 
          p
            b 
              u #{goal.title}
              
          <!-- On track or not. -->
          if isPracticeGoal
            p On track: #{goalOnTrackWeek}
          else
            p On track: #{goalOnTrackTotal}
            
          p= goal.description
          br
          
          <!-- Goal status'. -->
          p Day status: #{loggedDayHours}hrs #{loggedDayMinutes}min / #{totalDayHours}hrs #{totalDayMinutes}min
          br
          
          <!-- TODO: If complete, don't show garbage -->
          h4 WEEK
          p Remaining time this week: #{remainingWeekHours} Hours #{remainingWeekMinutes} Minutes
          if weekOnTrackDelta > 0
            p Behind schedule by: #{Math.trunc(weekOnTrackDelta)} Hours #{Math.trunc((weekOnTrackDelta * 60) % 60)} Minutes
          else 
            p Ahead of schedule by: #{Math.trunc(weekOnTrackDelta) * -1} Hours #{Math.trunc((weekOnTrackDelta * 60) % 60) * -1} Minutes
          .goalProgressBar 
            .goalProgressBarTimePassed(style="width:#{weekPercentOfTimePassedStyle}")
              .goalProgressBarCompleted(style="width:#{weekPercentHoursLoggedStyle}")
              
          p DEBUG:
          p Week status: #{loggedWeekHours}hrs #{loggedWeekMinutes}min / #{totalWeekHours}hrs #{totalWeekMinutes}min
            
          <!-- Extra info for all goals other than practice. -->
          if !isPracticeGoal
            p Week stats: At #{weekPercentHoursLogged}%, should be at #{weekPercentOfTimePassed}%. 
            br
            p Total status: #{loggedTotalHours}hrs #{loggedTotalMinutes}min / #{totalGoalHours}hrs #{totalGoalMinutes}min
            p Total stats: At #{totalPercentHoursLogged}%, should be at #{totalPercentOfTimePassed}%.
          
          <!-- Timer. -->
          if timerStarted
            a(href='/goal/' + goal._id + '/toggleTimer') Stop Timer
            p === Recording goal! ===  
          else
            a(href='/goal/' + goal._id + '/toggleTimer') Start Timer
           
          <!-- Edit -->
          p
            a(href='/goal/' + goal._id + '/edit') Edit Goal
             
    a(href='/signout') Log Out